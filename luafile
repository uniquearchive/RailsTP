-- –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
local Fluent = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/main/source.lua"))()
local LocalPlayer = game:GetService("Players").LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CollectionService = game:GetService("CollectionService")

-- –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –æ—Ä—É–∂–∏—è
local WeaponController = nil
pcall(function()
    WeaponController = require(ReplicatedStorage.Client.Controllers.WeaponController)
end)

-- –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
local Settings = {
    instantInteract = false,
    fullBright = false,
    noSpread = false,
    autoReload = false
}

local LightingBackup = {}
local originalNamecall = nil

-- —Ñ—É–Ω–∫—Ü–∏–∏
local function modifyProximityPrompts()
    for _, prompt in pairs(Workspace:GetDescendants()) do
        if prompt:IsA("ProximityPrompt") then
            if Settings.instantInteract then
                prompt.HoldDuration = 0.05
            else
                local original = prompt:GetAttribute("OriginalHoldDuration")
                if original then prompt.HoldDuration = original end
            end
        end
    end
end

local function storeLighting()
    LightingBackup = {
        Ambient = Lighting.Ambient,
        OutdoorAmbient = Lighting.OutdoorAmbient,
        Brightness = Lighting.Brightness,
        ColorShiftTop = Lighting.ColorShift_Top,
        ColorShiftBottom = Lighting.ColorShift_Bottom
    }
end

local function applyFullBright()
    Lighting.Ambient = Color3.new(1, 1, 1)
    Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
    Lighting.Brightness = 2
    Lighting.ColorShift_Top = Color3.new(0, 0, 0)
    Lighting.ColorShift_Bottom = Color3.new(0, 0, 0)
end

local function restoreFullBright()
    for prop, value in pairs(LightingBackup) do
        Lighting[prop] = value
    end
end

local function setupNoSpread()
    if originalNamecall then return end

    originalNamecall = hookmetamethod(game, "__namecall", function(self, ...)
        local method = getnamecallmethod()
        local args = {...}

        if Settings.noSpread and method == "FireServer" and self.Name == "Shoot" and typeof(args[3]) == "CFrame" then
            args[3] = Camera.CFrame
        end

        return originalNamecall(self, unpack(args))
    end)
end

local function autoReload()
    if not Settings.autoReload or not WeaponController then return end

    for _, weapon in pairs(CollectionService:GetTagged("Weapon")) do
        local state = weapon:FindFirstChild("ClientWeaponState")
        local config = weapon:FindFirstChild("WeaponConfiguration")

        if state and config then
            local ammo = state:FindFirstChild("CurrentAmmo")
            local reloading = state:FindFirstChild("IsReloading")
            local mag = config:FindFirstChild("MagazineSize")

            if ammo and reloading and mag and ammo.Value < mag.Value and not reloading.Value then
                WeaponController.ReloadGun(weapon)
            end
        end
    end
end

-- connections
RunService.Heartbeat:Connect(function()
    if Settings.autoReload then
        autoReload()
    end
end)

-- —Å–æ–∑–¥–∞–Ω–∏–µ GUI
local Window = Fluent:CreateWindow({
    Title = "exotusizm Hub üíâ",
    SubTitle = "Dead Rails | by exotusizm",
    TabWidth = 120,
    Size = UDim2.fromOffset(480, 320),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.RightShift
})

-- –≤–∫–ª–∞–¥–∫–∞ Character
local charTab = Window:AddTab({ Title = "Character", Icon = "üë§" })

charTab:AddToggle("instantInteract", {
    Title = "‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ",
    Default = false,
    Callback = function(value)
        Settings.instantInteract = value
        modifyProximityPrompts()
    end
})

charTab:AddToggle("fullBright", {
    Title = "üí° –ü–æ–ª–Ω–∞—è —è—Ä–∫–æ—Å—Ç—å",
    Default = false,
    Callback = function(value)
        Settings.fullBright = value
        if value then
            storeLighting()
            applyFullBright()
        else
            restoreFullBright()
        end
    end
})

charTab:AddToggle("noSpread", {
    Title = "üéØ –ù—É–ª–µ–≤–æ–π —Ä–∞–∑–±—Ä–æ—Å",
    Default = false,
    Callback = function(value)
        Settings.noSpread = value
        if value then
            setupNoSpread()
        end
    end
})

charTab:AddToggle("autoReload", {
    Title = "üîÑ –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞ –ø–æ—Å–ª–µ –≤—ã—Å—Ç—Ä–µ–ª–∞",
    Default = false,
    Callback = function(value)
        Settings.autoReload = value
    end
})
